/*
 * Copyright (c) 2019  Scott C. Sosna  ALL RIGHTS RESERVED
 *
 */

package com.buddhadata.sandbox.sdrrandom.random.controller;

import com.buddhadata.sandbox.sdrrandom.random.supplier.LongSupplierRandomBuilder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.PostConstruct;
import java.util.Random;

/**
 * Controller for returning random numbers generated by type
 */
@RestController()
@RequestMapping("random")
public class RandomController {

  @Autowired
  private LongSupplierRandomBuilder builder;

  private Random random;

  /**
   * getter
   * @return the next randomly-generated boolean
   */
  @GetMapping ("/boolean")
  public boolean getNextBoolean() {
    return random.nextBoolean();
  }

  /**
   * getter
   * @return the next randomly-generated double
   */
  @GetMapping ("/double")
  public double getNextDouble() {
    return random.nextDouble();
  }

  /**
   * getter
   * @return the next randomly-generated float
   */
  @GetMapping ("/float")
  public float getNextFloat() {
    return random.nextFloat();
  }

  /**
   * getter
   * @return the next randomly-generated gaussian value
   */
  @GetMapping ("/gaussian")
  public double getGaussian() { return random.nextGaussian(); }

  /**
   * getter
   * @return the next randomly-generated integer value
   */
  @GetMapping("/int")
  public int getNextInteger() {
    return random.nextInt();
  }

  /**
   * getter
   * @param bound the upper-bound for the random number
   * @return the next randomly-generated integer
   */
  @GetMapping("/int/{bound}")
  public int getNextInteger (@PathVariable("bound") int bound) {
    return random.nextInt (bound);
  }

  /**
   * getter
   * @return the next randomly-generated long value
   */
  @GetMapping("/long")
  public long getNextLong () { return random.nextLong(); }

  /**
   * Post-create steps to setup the controller before use, in this case creating the random number generator.
   */
  @PostConstruct
  public void init() {

    //  Create the specific random-number generator
    random = builder.create();
  }
}
